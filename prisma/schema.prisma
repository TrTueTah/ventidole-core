// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// NOTE: Prisma doesn't support inheritance, but you should copy these fields
// to every model in your database for consistency:
//
// id        String   @id @default(cuid())
// isActive  Boolean  @default(true)
// createdAt DateTime @default(now())
// updatedAt DateTime @updatedAt
// version   Int      @default(0)
//
// The version field is useful for optimistic locking to prevent concurrent update conflicts
model Account {
  id        String   @id @default(cuid())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  version   Int      @default(0)

  name        String? @db.VarChar(255)
  email       String  @unique(map: "accounts_email_unique_partial") @db.VarChar(255)
  phoneNumber String? @db.VarChar(255)
  password    String  @db.VarChar(255)
  role        Role
  deviceToken String? @db.VarChar(255)
  isDeleted   Boolean @default(false) @map("is_deleted")

  verifications   Verification[]
  social_accounts SocialAccount[]
  @@map("accounts")
}

model Verification {
  // Base entity fields - copy these to all models
  id        String   @id @default(cuid())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  version   Int      @default(0)

  type        VerificationType
  token       String           @unique
  expiresAt   DateTime         @map("expires_at")
  email       String?          @db.VarChar(255)
  confirmedAt DateTime?        @map("confirmed_at")

  accountId String?  @map("accountId")
  account   Account? @relation(fields: [accountId], references: [id], onDelete: Cascade)

  usedAt DateTime? @map("used_at")

  @@index([token])
  @@index([accountId])
  @@index([expiresAt])
  @@map("verifications")
}

model SocialAccount {
  // Base entity fields - copy these to all models
  id        String   @id @default(cuid())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  version   Int      @default(0)

  provider   SocialAccountProvider
  providerId String                @map("provider_id")

  accountId String  @map("user_id")
  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@unique([provider, providerId])
  @@index([accountId])
  @@map("social_accounts")
}

enum Role {
  FAN
  ADMIN
  IDOL
}

enum VerificationType {
  FIND_EMAIL
  RESET_PASSWORD
  REGISTER_ACCOUNT
  UPDATE_PROFILE
}

enum SocialAccountProvider {
  GOOGLE
  FACEBOOK
}
